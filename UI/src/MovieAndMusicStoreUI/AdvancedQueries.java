/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */

package MovieAndMusicStoreUI;

import java.sql.Connection;
import java.sql.ResultSet;
import java.sql.ResultSetMetaData;
import java.sql.Statement;

/**
 *
 * @author Sameer
 */
public class AdvancedQueries extends javax.swing.JFrame {

       static Connection conn = null;
    /**
     * Creates new form AdvancedQueries
     */
    public AdvancedQueries() {
        initComponents();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel1 = new javax.swing.JLabel();
        jButton1 = new javax.swing.JButton();
        jScrollPane1 = new javax.swing.JScrollPane();
        jTextArea1 = new javax.swing.JTextArea();
        jButton2 = new javax.swing.JButton();
        jButton3 = new javax.swing.JButton();
        jButton4 = new javax.swing.JButton();
        jButton5 = new javax.swing.JButton();
        jButton6 = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jLabel1.setFont(new java.awt.Font("Tahoma", 0, 36)); // NOI18N
        jLabel1.setText("ADVANCED QUERIES");

        jButton1.setText("Find people who have been the lead in both a movie and an album");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });

        jTextArea1.setColumns(20);
        jTextArea1.setRows(5);
        jScrollPane1.setViewportView(jTextArea1);

        jButton2.setText("List manufacturers whose names don't start with a vowel List manufacturers whose names don't start with a vowel ");
        jButton2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton2ActionPerformed(evt);
            }
        });

        jButton3.setText("List products with a quantity between 20 and 50, grouped by title");
        jButton3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton3ActionPerformed(evt);
            }
        });

        jButton4.setText("List genres with avg price greater than avg quantity");
        jButton4.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton4ActionPerformed(evt);
            }
        });

        jButton5.setText("Find a music artist whose producer is also a movie actor");
        jButton5.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton5ActionPerformed(evt);
            }
        });

        jButton6.setText("CLOSE");
        jButton6.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton6ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(20, 20, 20)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 715, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jButton3)
                            .addComponent(jButton4)
                            .addComponent(jButton5)
                            .addGroup(layout.createSequentialGroup()
                                .addGap(252, 252, 252)
                                .addComponent(jButton6))
                            .addComponent(jButton2)
                            .addComponent(jButton1)))
                    .addComponent(jLabel1))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel1)
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jButton1)
                        .addGap(31, 31, 31)
                        .addComponent(jButton2)
                        .addGap(38, 38, 38)
                        .addComponent(jButton3)
                        .addGap(42, 42, 42)
                        .addComponent(jButton4)
                        .addGap(36, 36, 36)
                        .addComponent(jButton5)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(jButton6)
                        .addGap(95, 95, 95))
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 507, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addContainerGap(24, Short.MAX_VALUE))))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
           
         
        Database.ConnectToDB();
        String[] attr = new String[20];
        String temp = "";
     
        try{
                        Statement st = conn.createStatement();
                        ResultSet rs = st.executeQuery("SELECT lead_actor, product_id FROM movie WHERE EXISTS (SELECT product_id FROM music WHERE movie.lead_actor = music.lead_artist ) ORDER BY movie.lead_actor ASC");
                        ResultSetMetaData rsmd = rs.getMetaData();
                        int cn = rsmd.getColumnCount();
                        

                        while (rs.next()) {
                            for(int i = 0; i<cn; i++){
                                    attr[i] = rs.getString(i+1).toString();
                            }
                            for(int i = 0; i<cn; i++){
                                    //System.out.print(attr[i] + "\t\t");
                                    temp = temp + attr[i] + "\t\t";
                            }
                            //System.out.println("");
                            temp = temp + "\n";
                        }
                        jTextArea1.setText("SELECT lead_actor, product_id FROM movie WHERE EXISTS (SELECT product_id FROM music WHERE movie.lead_actor = music.lead_artist ) ORDER BY movie.lead_actor ASC;");
                        jTextArea1.setText(temp);
                        rs.close();
                    } catch (Exception e) {
                        e.printStackTrace();
                    } 
        
                                         

    
      
    }//GEN-LAST:event_jButton1ActionPerformed

    private void jButton2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton2ActionPerformed
         
        Database.ConnectToDB();
        String[] attr = new String[20];
        String temp = "";
     
        try{
                        Statement st = conn.createStatement();
                        ResultSet rs = st.executeQuery("SELECT DISTINCT manufacturer_name FROM manufacturer WHERE manufacturer_name NOT LIKE 'A%' AND manufacturer_name NOT LIKE 'E%' AND manufacturer_name NOT LIKE 'I%' AND manufacturer_name NOT LIKE 'O%' AND manufacturer_name NOT LIKE 'U%'");
                        ResultSetMetaData rsmd = rs.getMetaData();
                        int cn = rsmd.getColumnCount();
                        

                        while (rs.next()) {
                            for(int i = 0; i<cn; i++){
                                    attr[i] = rs.getString(i+1).toString();
                            }
                            for(int i = 0; i<cn; i++){
                                    //System.out.print(attr[i] + "\t\t");
                                    temp = temp + attr[i] + "\t\t";
                            }
                            //System.out.println("");
                            temp = temp + "\n";
                        }
                        jTextArea1.setText("SELECT DISTINCT manufacturer_name FROM manufacturer WHERE manufacturer_name NOT LIKE 'A%' AND manufacturer_name NOT LIKE 'E%' AND manufacturer_name NOT LIKE 'I%' AND manufacturer_name NOT LIKE 'O%' AND manufacturer_name NOT LIKE 'U%';");
                        jTextArea1.setText(temp);
                        rs.close();
                    } catch (Exception e) {
                        e.printStackTrace();
                    } 
        
    }//GEN-LAST:event_jButton2ActionPerformed

    private void jButton3ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton3ActionPerformed
         Database.ConnectToDB();
        String[] attr = new String[20];
        String temp = "";
     
        try{
                        Statement st = conn.createStatement();
                        ResultSet rs = st.executeQuery("SELECT title, quantity FROM PRODUCT WHERE quantity BETWEEN 20 and 50 ORDER BY title");
                        ResultSetMetaData rsmd = rs.getMetaData();
                        int cn = rsmd.getColumnCount();
                        

                        while (rs.next()) {
                            for(int i = 0; i<cn; i++){
                                    attr[i] = rs.getString(i+1).toString();
                            }
                            for(int i = 0; i<cn; i++){
                                    //System.out.print(attr[i] + "\t\t");
                                    temp = temp + attr[i] + "\t\t";
                            }
                            //System.out.println("");
                            temp = temp + "\n";
                        }
                        jTextArea1.setText("SELECT title, quantity FROM PRODUCT WHERE quantity BETWEEN 20 and 50 ORDER BY title;");
                        jTextArea1.setText(temp);
                        rs.close();
                    } catch (Exception e) {
                        e.printStackTrace();
                    } 
    }//GEN-LAST:event_jButton3ActionPerformed

    private void jButton4ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton4ActionPerformed
        Database.ConnectToDB();
        String[] attr = new String[20];
        String temp = "";
     
        try{
                        Statement st = conn.createStatement();
                        ResultSet rs = st.executeQuery("SELECT genre, AVG(price) FROM product GROUP BY genre HAVING AVG(price) > (SELECT AVG(quantity) FROM product)");
                        ResultSetMetaData rsmd = rs.getMetaData();
                        int cn = rsmd.getColumnCount();
                        

                        while (rs.next()) {
                            for(int i = 0; i<cn; i++){
                                    attr[i] = rs.getString(i+1).toString();
                            }
                            for(int i = 0; i<cn; i++){
                                    //System.out.print(attr[i] + "\t\t");
                                    temp = temp + attr[i] + "\t\t";
                            }
                            //System.out.println("");
                            temp = temp + "\n";
                        }
                        jTextArea1.setText("SELECT genre, AVG(price) FROM product GROUP BY genre HAVING AVG(price) > (SELECT AVG(quantity) FROM product);");
                        jTextArea1.setText(temp);
                        rs.close();
                    } catch (Exception e) {
                        e.printStackTrace();
                    } 
    }//GEN-LAST:event_jButton4ActionPerformed

    private void jButton5ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton5ActionPerformed
        Database.ConnectToDB();
        String[] attr = new String[20];
        String temp = "";
     
        try{
                        Statement st = conn.createStatement();
                        ResultSet rs = st.executeQuery("SELECT lead_artist, lead_actor, producer FROM movie, music WHERE movie.lead_actor = music.producer ORDER BY lead_artist");
                        ResultSetMetaData rsmd = rs.getMetaData();
                        int cn = rsmd.getColumnCount();
                        

                        while (rs.next()) {
                            for(int i = 0; i<cn; i++){
                                    attr[i] = rs.getString(i+1).toString();
                            }
                            for(int i = 0; i<cn; i++){
                                    //System.out.print(attr[i] + "\t\t");
                                    temp = temp + attr[i] + "\t\t";
                            }
                            //System.out.println("");
                            temp = temp + "\n";
                        }
                        jTextArea1.setText("SELECT lead_artist, lead_actor, producer FROM movie, music WHERE movie.lead_actor = music.producer ORDER BY lead_artist;");
                        jTextArea1.setText(temp);
                        rs.close();
                    } catch (Exception e) {
                        e.printStackTrace();
                    } 
    }//GEN-LAST:event_jButton5ActionPerformed

    private void jButton6ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton6ActionPerformed
        this.dispose();
    }//GEN-LAST:event_jButton6ActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(AdvancedQueries.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(AdvancedQueries.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(AdvancedQueries.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(AdvancedQueries.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new AdvancedQueries().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton jButton1;
    private javax.swing.JButton jButton2;
    private javax.swing.JButton jButton3;
    private javax.swing.JButton jButton4;
    private javax.swing.JButton jButton5;
    private javax.swing.JButton jButton6;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTextArea jTextArea1;
    // End of variables declaration//GEN-END:variables
}
